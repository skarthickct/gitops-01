name: Build Step

on:
  push:
    branches: ['master']

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          registry-url: http://your-nexus-host/repository/npm-all/

      - name: Setup .npmrc for Nexus
        run: |
          echo "//your-nexus-host/repository/npm-all/:_auth=${{ secrets.NPM_AUTH_TOKEN }}" >> ~/.npmrc
          echo "//your-nexus-host/repository/npm-all/:always-auth=true" >> ~/.npmrc
          echo "registry=http://your-nexus-host/repository/npm-all/" >> ~/.npmrc

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Cache pnpm store
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-

      - name: Install Dependencies from Nexus
        run: pnpm install --prefer-offline --frozen-lockfile

      - name: Build Project
        run: pnpm run build

  build-and-push-docker-image:
    name: Build Docker Image and Push to GHCR
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: GitHub Container Registry Login
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.G_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v2
        with:
          context: ./
          push: ${{ github.ref == 'refs/heads/master' }}
          tags: ghcr.io/skarthickct/gitops-01:${{ github.sha }}
          cache-from: type=registry,ref=ghcr.io/skarthickct/gitops-01:latest
          cache-to: type=inline

  update-manifest-stage:
    runs-on: ubuntu-latest
    needs: build-and-push-docker-image

    steps:
      - uses: actions/checkout@v3
        with:
          repository: skarthickct/gitops-infra
          ref: 'master'
          token: ${{ secrets.G_TOKEN }}

      - name: Setup git config
        run: |
          git config --global user.email "karthick@cloudthat.com"
          git config --global user.name "skarthickct"

      - name: Update Image in Deployment YAML
        run: |
          sed -i "s#image: .*#image: ghcr.io/skarthickct/gitops-01:${{ github.sha }}#g" deployment.yaml

      - name: Check for Changes in deployment.yaml
        id: check_changes
        run: |
          git diff --quiet || echo "changes_detected=true" >> $GITHUB_OUTPUT

      - name: Commit and Push Changes if Any
        if: steps.check_changes.outputs.changes_detected == 'true'
        run: |
          git add deployment.yaml
          git commit -m "Update image to ghcr.io/skarthickct/gitops-01:${{ github.sha }}"
          git push origin master
